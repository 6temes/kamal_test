# Name of your application. Used to uniquely configure containers.
service: kamal_test

# Name of the container image.
image: 6temes/kamal_test

# Deploy to these servers.
servers:
  web:
    - 52.199.125.78
  job:
    hosts:
      - 52.199.125.78
    cmd: bundle exec good_job start

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: kamal-test.6temes.net

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  server: ghcr.io
  username: 6temes

  # Always use an access token rather than real password when possible.
  password:
    - GHCR_PAT

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
    - POSTGRES_USER
  clear:
    # GoodJob runs as a separate process on the job server
    # Set number of threads for GoodJob (default: 5)
    GOOD_JOB_MAX_THREADS: 5

    # Set number of cores available to the application on each server (default: 1).
    CONCURRENCY: 2

    # Database configuration for PostgreSQL
    DB_HOST: kamal_test-db
    DB_NAME: kamal_test_pg_production
    DB_PORT: 5432

    # Log everything from Rails
    # RAILS_LOG_LEVEL: debug

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"


# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
volumes:
  - "kamal_test_storage:/rails/storage"


# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64

  # # Build image via remote server (useful for faster amd64 builds on arm64 computers)
  # remote: ssh://docker@docker-builder-server
  #
  # # Pass arguments and secrets to the Docker build process
  # args:
  #   RUBY_VERSION: 3.4.5
  # secrets:
  #   - GITHUB_TOKEN
  #   - RAILS_MASTER_KEY

# Use a different ssh user than root
ssh:
  user: admin
  port: 54022

# Use accessory services (secrets come from .kamal/secrets).
accessories:
  db:
    image: postgres:17
    host: 52.199.125.78
    port: "127.0.0.1:5432:5432" # Allow TablePlus to connect using the port on the host.
    env:
      clear:
        POSTGRES_DB: kamal_test_pg_production
      secret:
        - POSTGRES_USER
        - POSTGRES_PASSWORD
    directories:
      - data:/var/lib/postgresql/data

# Configure Papertrail logging
# You'll need to replace PAPERTRAIL_HOST and PAPERTRAIL_PORT with your actual Papertrail endpoint
# Get these from your Papertrail account at https://papertrailapp.com/account/destinations
logging:
  driver: syslog
  options:
    syslog-address: "udp://logs.papertrailapp.com:1111" # Replace with your Papertrail endpoint
    tag: "{{.Name}}/{{.ImageName}}"
    syslog-format: rfc3164

