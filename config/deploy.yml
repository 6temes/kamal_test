# Name of your application. Used to uniquely configure containers.
service: kamal_test

# Name of the container image.
image: ghcr.io/6temes/kamal_test

# Deploy to these servers.
servers:
  web:
    - 13.231.125.125
  job:
    hosts:
      - 13.231.125.125
    cmd: bundle exec good_job start

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: kamal-test.6temes.net

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  server: ghcr.io
  username: 6temes

  # Always use an access token rather than real password when possible.
  password:
    - GHCR_PAT

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
  clear:
    # GoodJob runs as a separate process on the job server
    # Set number of threads for GoodJob (default: 5)
    GOOD_JOB_MAX_THREADS: 5

    # Set number of cores available to the application on each server (default: 1).
    CONCURRENCY: 2

    # Database configuration for PostgreSQL
    DB_HOST: kamal_test-db
    DB_NAME: kamal_test_pg_production
    DB_USER: kamal_test_pg
    DB_PORT: 5432

    # Log everything from Rails
    # RAILS_LOG_LEVEL: debug

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"


# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
volumes:
  - "kamal_test_storage:/rails/storage"


# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64

  # # Build image via remote server (useful for faster amd64 builds on arm64 computers)
  # remote: ssh://docker@docker-builder-server
  #
  # # Pass arguments and secrets to the Docker build process
  # args:
  #   RUBY_VERSION: 3.4.5
  # secrets:
  #   - GITHUB_TOKEN
  #   - RAILS_MASTER_KEY

# Use a different ssh user than root
ssh:
  user: admin
  port: 54022

# Use accessory services (secrets come from .kamal/secrets).
accessories:
  db:
    image: postgres:17
    host: 13.231.125.125
    port: "127.0.0.1:5432:5432" # Allow TablePlus to connect using the port on the host.
    env:
      clear:
        POSTGRES_DB: kamal_test_pg_production
        POSTGRES_USER: kamal_test_pg
      secret:
        - POSTGRES_PASSWORD
    directories:
      - data:/var/lib/postgresql/data

  loki:
    image: grafana/loki:2.9.0
    host: 13.231.125.125
    port: 3100
    files:
      - config/loki.yml:/etc/loki.yml
    volumes:
      - loki-data:/loki
    cmd: -config.file=/etc/loki.yml
    options:
      cpus: 1.2
      memory: 1g

  prometheus:
    image: prom/prometheus:v3.4.1
    host: 13.231.125.125
    proxy:
      host: prometheus.kamal-test.6temes.net
      ssl: true
      app_port: 9090
      healthcheck:
        path: /-/ready
        interval: 3
        timeout: 2
    volumes:
      - "prometheus:/etc/prometheus"
    files:
      - config/prometheus.yml:/etc/prometheus.yml
    cmd: --config.file=/etc/prometheus.yml --web.external-url=https://prometheus.kamal-test.6temes.net/
    options:
      cpus: 1.2
      memory: 1g

  grafana:
    image: grafana/grafana:12.0.1
    host: 13.231.125.125
    proxy:
      host: grafana.kamal-test.6temes.net
      ssl: true
      app_port: 3000
      healthcheck:
        path: /login
        interval: 3
        timeout: 2
    env:
      clear:
        GF_SERVER_DOMAIN: grafana.kamal-test.6temes.net
        GF_SERVER_ROOT_URL: "https://grafana.kamal-test.6temes.net/"
        GF_SERVER_SERVE_FROM_SUB_PATH: "false"
    volumes:
      - "grafana:/var/lib/grafana"
    options:
      cpus: 1.2
      memory: 1g

  node_exporter:
    image: prom/node-exporter:v1.9.1
    hosts: 
      - 13.231.125.125
    port: 9100:9100
    network: host
    directories:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    cmd: "--path.procfs=/host/proc --path.sysfs=/host/sys --path.rootfs=/rootfs --collector.processes --collector.cpu --collector.meminfo --collector.filesystem.mount-points-exclude='^/(sys|proc|dev|host|etc)($$|/)'"
    options:
      pid: "host"
      cpus: 0.5
      memory: 0.5g

